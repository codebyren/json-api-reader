{"version":3,"file":"index.js","sources":["../tmp/index.js"],"sourcesContent":["class JsonApiReader {\r\n    constructor() {\r\n        this.transformers = {};\r\n        this.rel_cache = new Set();\r\n    }\r\n    setTransformer(type, transformer) {\r\n        this.transformers[type] = transformer;\r\n    }\r\n    hasTransformer(type) {\r\n        return this.transformers.hasOwnProperty(type);\r\n    }\r\n    transform(obj, type) {\r\n        const transformer = type && this.hasTransformer(type) ? this.transformers[type] : false;\r\n        const callback = (typeof transformer === 'object' && transformer.hasOwnProperty('transform'))\r\n            ? transformer.transform\r\n            : transformer;\r\n        return callback && callback instanceof Function\r\n            ? callback(obj)\r\n            : obj;\r\n    }\r\n    makeRelationshipDescriptor(details) {\r\n        return `${details.parent_type}_${details.parent_id}:${details.child_type}`.toUpperCase();\r\n    }\r\n    commitRelationship(details) {\r\n        const descriptor = this.makeRelationshipDescriptor(details);\r\n        this.rel_cache.add(descriptor);\r\n    }\r\n    canRecallRelationship(details) {\r\n        const descriptor = this.makeRelationshipDescriptor(details);\r\n        return this.rel_cache.has(descriptor);\r\n    }\r\n    parse(jsonResponse) {\r\n        const invalid_data_message = \"Unexpected input data format.\";\r\n        // @todo - JSON:API could have top-level node of \"errors\" instead of \"data\" if errors occurred.\r\n        if (typeof jsonResponse !== \"object\" ||\r\n            !jsonResponse.hasOwnProperty(\"data\")) {\r\n            throw new Error(invalid_data_message);\r\n        }\r\n        // For coding convenience, we'll be forcing single objects into an array\r\n        // (we'll restore to initial object vs array of objects before return)\r\n        let stash = [];\r\n        const data = jsonResponse.data;\r\n        const included = jsonResponse.included ? jsonResponse.included : [];\r\n        // The \"data\" should be an object or array of objects\r\n        if (!Array.isArray(data) && typeof data !== \"object\") {\r\n            throw new Error(invalid_data_message);\r\n        }\r\n        // Here's where we force an array so code can always loop\r\n        // even if there is only the one item inside the array.\r\n        const items = Array.isArray(data) ? data : [data];\r\n        items.forEach((item) => {\r\n            const item_type = item.type; // book, author etc.\r\n            const relationships = item.relationships;\r\n            let record = Object.assign({ id: item.id }, item.attributes);\r\n            record = this.transform(record, item_type);\r\n            if (typeof relationships === \"object\") {\r\n                Object.keys(relationships).forEach((k) => {\r\n                    const rel = relationships[k];\r\n                    const summary = rel.data; // object like { id: 123, type: 'user' } or an array of such items (or NULL!)\r\n                    // Record that we are processing this relationship\r\n                    // or abort early if we've' already processed it.\r\n                    let rel_details = {\r\n                        parent_type: item_type,\r\n                        parent_id: item.id,\r\n                        child_type: k,\r\n                    };\r\n                    if (this.canRecallRelationship(rel_details)) {\r\n                        return;\r\n                    }\r\n                    this.commitRelationship(rel_details);\r\n                    // Again, we're going to force array format for easy\r\n                    // looping even when only dealing with one object.\r\n                    let includes = [];\r\n                    let summaries = Array.isArray(summary) ? summary : [summary];\r\n                    summaries.forEach((s) => {\r\n                        let matches = included.filter((incl) => {\r\n                            return incl.id == (s === null || s === void 0 ? void 0 : s.id) && incl.type == (s === null || s === void 0 ? void 0 : s.type);\r\n                        });\r\n                        matches.forEach((match) => {\r\n                            includes.push(this.parse({ data: match, included }));\r\n                        });\r\n                    });\r\n                    // Restore to original structure (either single object or array of objects)\r\n                    const relation_data = Array.isArray(summary)\r\n                        ? includes\r\n                        : includes.shift();\r\n                    if (record.hasOwnProperty(k)) {\r\n                        throw new Error(`Cannot set relation as '${k}' on object. Property name already in use.`);\r\n                    }\r\n                    else {\r\n                        // Reminder: includes.shift() may produce undefined for empty array\r\n                        record[k] =\r\n                            typeof relation_data === \"undefined\" ? null : relation_data;\r\n                    }\r\n                });\r\n            }\r\n            stash.push(record);\r\n        });\r\n        // Now reset the cache of relationships processed in case this\r\n        // instance of the reader is used to parse other responses.\r\n        this.rel_cache = new Set();\r\n        // Now return data in original jsonResponse format\r\n        // (meaning a single object or array of objects)\r\n        return Array.isArray(data) ? stash : stash.shift() || [];\r\n    }\r\n}\n\nexport { JsonApiReader as default };\n"],"names":[],"mappings":";;;;AAAA,MAAM,aAAa,CAAC;AACpB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC,KAAK;AACL,IAAI,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;AACtC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;AAC9C,KAAK;AACL,IAAI,cAAc,CAAC,IAAI,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACtD,KAAK;AACL,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE;AACzB,QAAQ,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAChG,QAAQ,MAAM,QAAQ,GAAG,CAAC,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC;AACpG,cAAc,WAAW,CAAC,SAAS;AACnC,cAAc,WAAW,CAAC;AAC1B,QAAQ,OAAO,QAAQ,IAAI,QAAQ,YAAY,QAAQ;AACvD,cAAc,QAAQ,CAAC,GAAG,CAAC;AAC3B,cAAc,GAAG,CAAC;AAClB,KAAK;AACL,IAAI,0BAA0B,CAAC,OAAO,EAAE;AACxC,QAAQ,OAAO,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACjG,KAAK;AACL,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAChC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;AACpE,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,qBAAqB,CAAC,OAAO,EAAE;AACnC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;AACpE,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC9C,KAAK;AACL,IAAI,KAAK,CAAC,YAAY,EAAE;AACxB,QAAQ,MAAM,oBAAoB,GAAG,+BAA+B,CAAC;AACrE;AACA,QAAQ,IAAI,OAAO,YAAY,KAAK,QAAQ;AAC5C,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAClD,YAAY,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAClD,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC;AACvB,QAAQ,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;AACvC,QAAQ,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC5E;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC9D,YAAY,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAClD,SAAS;AACT;AACA;AACA,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1D,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAChC,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AACxC,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACrD,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACzE,YAAY,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACvD,YAAY,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AACnD,gBAAgB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC1D,oBAAoB,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACjD,oBAAoB,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7C;AACA;AACA,oBAAoB,IAAI,WAAW,GAAG;AACtC,wBAAwB,WAAW,EAAE,SAAS;AAC9C,wBAAwB,SAAS,EAAE,IAAI,CAAC,EAAE;AAC1C,wBAAwB,UAAU,EAAE,CAAC;AACrC,qBAAqB,CAAC;AACtB,oBAAoB,IAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,EAAE;AACjE,wBAAwB,OAAO;AAC/B,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;AACzD;AACA;AACA,oBAAoB,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtC,oBAAoB,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;AACjF,oBAAoB,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC7C,wBAAwB,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK;AAChE,4BAA4B,OAAO,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1J,yBAAyB,CAAC,CAAC;AAC3B,wBAAwB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AACnD,4BAA4B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjF,yBAAyB,CAAC,CAAC;AAC3B,qBAAqB,CAAC,CAAC;AACvB;AACA,oBAAoB,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;AAChE,0BAA0B,QAAQ;AAClC,0BAA0B,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC3C,oBAAoB,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAClD,wBAAwB,MAAM,IAAI,KAAK,CAAC,CAAC,wBAAwB,EAAE,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;AAClH,qBAAqB;AACrB,yBAAyB;AACzB;AACA,wBAAwB,MAAM,CAAC,CAAC,CAAC;AACjC,4BAA4B,OAAO,aAAa,KAAK,WAAW,GAAG,IAAI,GAAG,aAAa,CAAC;AACxF,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAS,CAAC,CAAC;AACX;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC;AACA;AACA,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;AACjE,KAAK;AACL;;;;"}